- name: Check if target exists and is not a symlink
  ansible.builtin.stat:
    path: "{{ ansible_env.HOME }}/.config/{{ item }}"
  register: target_status
  loop: "{{ general_packages_installation_directories_to_link }}"

- name: Link directories if necessary
  ansible.builtin.file:
    src: "{{ ansible_env.HOME }}/.dotfiles/{{ item.item }}"
    dest: "{{ ansible_env.HOME }}/.config/{{ item.item }}"
    state: link
  loop: "{{ target_status.results }}"
  when: >
    not item.stat.exists or
    (item.stat.exists and not item.stat.islnk)
  # loop_control:
  #   label: "{{ item.item }}"

- name: Synchronize package database and install packages
  community.general.pacman:
    name:
      - git
      - ninja
      - vim
      - vivaldi
      - alacritty
      - exa
      - zoxide
      - fzf
      - ninja
      - cmake
      - unzip
      - zellij
      - telegram-desktop
      - fd
      - ripgrep
      - wl-clipboard
      - ttf-noto-nerd
      - yamllint
      - ansible-lint
      - nodejs
      - npm
      - yaml-language-server
      - ansible-language-server
      - rustup
      - go
      - lua-language-server
      - opera
      - nushell
      - gopls
      - shellcheck
      - docker
      - docker-buildx
    state: latest
    update_cache: true
  become: true

# - name: Clone .dotfiles repository
#   ansible.builtin.git:
#     repo: 'https://github.com/Doodler8888/.dotfiles.git'
#     dest: "{{ ansible_env.HOME }}/.dotfiles"
#     version: "master"


# -y: Refresh the package database, ensuring you have the latest package lists. This is the equivalent of update_cache: true in the Ansible module.
# -u: Upgrade all packages to their latest versions. When combined with -S, it
# applies to the specified package(s), making sure they are upgraded to the
# latest version, which corresponds to state: latest in the Ansible module.
