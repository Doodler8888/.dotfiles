#!/bin/perl

use 5.26.0;
use strict;
use warnings;
use feature 'signatures';
use Getopt::Long;
use File::Path qw(remove_tree);
use File::Basename;
use Cwd 'getcwd';


my $description = <<"END";
Usage: $0 [--home|-h] <file1> <file2> ...
Usage: $0 [--bin|-b] <file1> <file2> ...
END

my $destination = "$ENV{HOME}/.config";

(GetOptions(
    "home|h" => sub { $destination = "$ENV{HOME}" },
    "bin|b"  => sub { $destination = "/usr/local/bin" }
) && @ARGV) or die $description;

sub check_destination($destination) {
    if (-e $destination) {
        say "$destination exists, do you want to delete it? (type 'y' or it will terminate)\=> ";
        chomp(my $input = lc <STDIN>);
        if ($input eq "y") {
            if (-l $destination || -f $destination) {
                unlink($destination) or die "Failed to remove $destination: $!";
            } elsif (-d $destination) {
                remove_tree($destination) or die "Failed to remove directory $destination: $!";
            }
        } else {
            die "Script execution is canceled.";
        }
    }
}

sub main($destination, @files) {
	for my $file (@files) {
		say "This is the destination: $destination";
		# Assuming that you provide a full file path
		if ($file =~ /^\/$ENV{HOME}/) {
			my $full_destination = $destination . "/" . basename($file);
			check_destination($full_destination);
			symlink($file, $full_destination);
		} else {
			# Assuming that you provide only a file name
			my $full_path = getcwd() . "/$file"; # Can't use $ENV{PWD} because sudo resets values of env variables (?).
			say "This is what pwd does: $full_path";
			say "This is what gets linked: $full_path";
			# It looks like i have to specify a full path when using the 'symlink' function.
			my $full_destination = $destination . "/" . $file;
			check_destination($full_destination);
			symlink($full_path, $full_destination) or warn "Failed to symlink $file: $!\n";
		}
	}
}

main($destination, @ARGV);
