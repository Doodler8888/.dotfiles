#!/usr/bin/env raku

sub push-all($dir = ".") {
    my @remote_repos = shell("cd $dir && git remote -v | grep 'push'", :out)
        .out.slurp(:close).lines.map({ .split(/\s+/)[0] });
    qqx/cd "$dir" && git add . && git commit -m "n"/;

  for @remote_repos.kv -> $index, $repo {
      qqx/cd $dir && git push $repo/;
      say "" if $index < @remote_repos.elems - 1; # Indexing starts from 0, that's why i'm subtracting.
  }
}


multi MAIN(Bool :l(:$list) = False) {
  my @messages;
  my @repos = shell("find ~/ -type d -name '.git' -not -path '*/.source/*' -not -path '*/.antigen/*' -not -path '*/.cargo/*' -not -path '*/elpaca/*' -not -path '*/.cache/*' -not -path '*/.local/*' -not -path '*/.share/*' -printf '%p\n' 2>/dev/null", :out)
  .out.slurp(:close).lines.map(*.chomp); # Apply chomp to each line
  push-all() if $list == False;

  for @repos -> $repo-dir {
    my $status = shell("git -C {$repo-dir.IO.parent} status --porcelain", :out).out.slurp(:close);
    if $status.chars {
      my $last-commit-date = shell("git -C {$repo-dir.IO.parent} log -1 --format=%cd", :out)
      .out.slurp(:close).chomp;
      my $message = "\nRepository with uncommitted changes: {$repo-dir.IO.parent}\n"
      ~ "Last commit date: $last-commit-date";
      @messages.push($message);
    }
  }

  say @messages.join("\n");
  say "";
}


multi MAIN(Bool :a(:$all)!) {
  my @repos = shell("find ~/ -type d -name '.git' -not -path '*/.source/*' -not -path '*/.antigen/*' -not -path '*/.cargo/*' -not -path '*/elpaca/*' -not -path '*/.cache/*' -not -path '*/.local/*' -not -path '*/.share/*' -printf '%p\n' 2>/dev/null", :out)
  .out.slurp(:close).lines.map(*.chomp);

  for @repos -> $repo-dir {
    say "Processing: $repo-dir ...";
    push-all($repo-dir.IO.dirname);
    say "---------------------------------------------------------------------";
    }
}

multi MAIN(Bool :h(:$help)!) {
        say "$*USAGE\n";
        say "Options:";
        say "  --list  (-l) List all local repositories with uncommitted changes";
        say "  --all   (-a) Push changes to all repositories";
}

# {$repo-dir.IO.dirname} - originally i go into a .git directory, with
# 'IO.dirname' i go to a directory of a .git directory instead.
