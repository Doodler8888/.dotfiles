#!/bin/sh

emacs_dir="$HOME/.emacs.d/"
dotfiles_dir="$HOME/.dotfiles/"

remote_names="origin gitlab"
dirs="$emacs_dir $dotfiles_dir"

gitlab_remote="git@gitlab.com:Doodler8888/dotfiles.git"
test_remote="git@test.com:Doodler8888/dotfiles.git"
remote_addresses="$test_remote $gitlab_remote"

delimiter="==============================================================="
# add_remote=""

# gitlab_remote="git@gitlab.com:Doodler8888/dotfiles.git"

for dir in $dirs; do
    is_fine=true
    default_address=""
    # echo "This is the value of $is_fine"
    echo "This is the current directory checked: $dir"
    [ -d "$dir" ] || { echo "No such directory: $dir"; exit 0; }
    for remote_name in $remote_names; do
        cd "$dir" || exit 1
		# Check if the current remote name of the loop is present in the current repo
		if ( git remote -v | awk '{print $1}' | grep -E "^$remote_name$" 1> /dev/null ); then
			continue
		else
			is_fine=false
			needed_remotes="$needed_remotes$remote_name "
			# If i have a remote with the same name as the base name of a git
			# host provider, then set default remote address to suggest that
			# provider
			for remote_address in $remote_addresses; do
				echo "Current remote address: $remote_address"
				echo "Current remote name: $remote_name"
				base_host_name="${remote_address#*@}"
				base_host_name="${base_host_name%%.*}"
				echo "This is the current base_host name: $base_host_name"
				case "$base_host_name" in
					$remote_name) default_address="$remote_address" ;;
				esac
			done
			echo "Repo $dir doesn't have remote: $remote_name";
			echo "Do you want to add remote \"$remote_name\" to $dir? (write \"yes\" or \"no\")"
			read -r input
			case "$input" in
				yes)
					echo "Enter address for the $remote_name (default $default_address):"
					# echo "\nRemote added.\n"
					;;
				no) 
					echo "\nRemote wasn't added.\n"
					;;
			esac
		fi
    done;
    if "$is_fine"; then
		echo "Directory $dir has the remotes needed:"
		echo "This is the value of $is_fine"
		git remote -v && echo ""
    else
		echo "Directory $dir doesn't have the remotes needed:"
		echo "$needed_remotes"
		echo "$delimiter\n"
		needed_remotes=""
    fi
done

